{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","validationState","addMove","event","preventDefault","validationInput","length","setState","prevState","addValueToState","value","name","validation","props","this","htmlFor","id","type","onChange","target","onBlur","onClick","Component","App","moviesFromServer","addMovie","newMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b861373.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMove:(state: Movie) => void,\n};\n\ntype State = {\n  movie:Movie,\n  validationState: {\n    title: boolean,\n    description: boolean,\n    imgUrl: boolean,\n    imdbId: boolean,\n  }\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    validationState: {\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbId: false,\n    },\n  };\n\n  addMove = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  validationInput = () => {\n    const {\n      title, description, imgUrl, imdbId,\n    } = this.state.movie;\n\n    if (title.length === 0) {\n      this.setState(prevState => (\n        { validationState: { ...prevState.validationState, title: true } }\n      ));\n    } else {\n      this.setState(prevState => (\n        { validationState: { ...prevState.validationState, title: false } }\n      ));\n    }\n\n    if (description.length === 0) {\n      this.setState(prevState => (\n        { validationState: { ...prevState.validationState, description: true } }\n      ));\n    } else {\n      this.setState(prevState => (\n        { validationState: { ...prevState.validationState, description: false } }\n      ));\n    }\n\n    if (imgUrl.length === 0) {\n      this.setState(prevState => (\n        { validationState: { ...prevState.validationState, imgUrl: true } }\n      ));\n    } else {\n      this.setState(prevState => (\n        { validationState: { ...prevState.validationState, imgUrl: false } }\n      ));\n    }\n\n    if (imdbId.length === 0) {\n      this.setState(prevState => (\n        { validationState: { ...prevState.validationState, imdbId: true } }\n      ));\n    } else {\n      this.setState(prevState => (\n        { validationState: { ...prevState.validationState, imdbId: false } }\n      ));\n    }\n  };\n\n  addValueToState = (value:string, name:string) => {\n    this.validationInput();\n    this.setState(state => (\n      { movie: { ...state.movie, [name]: value } }\n    ));\n  };\n\n  validation = (state:Movie) => {\n    const {\n      title, description, imgUrl, imdbId,\n    } = this.state.movie;\n\n    this.validationInput();\n\n    if (\n      title.length > 0\n      && description.length > 0\n      && imgUrl.length > 0\n      && imdbId.length > 0\n    ) {\n      this.props.addMove(state);\n    }\n  };\n\n  render() {\n    const {\n      title, description, imgUrl, imdbId,\n    } = this.state.validationState;\n\n    return (\n      <form className=\"form\">\n        <label\n          htmlFor=\"title\"\n          className={title ? 'error error_title' : ''}\n        >\n          Title\n          <input\n            id=\"title\"\n            type=\"text\"\n            onChange={(event) => {\n              this.addValueToState(event.target.value, event.target.id);\n            }}\n            onBlur={() => {\n              this.validation(this.state.movie);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"description\"\n          className={description ? 'error error_description' : ''}\n        >\n          Description\n          <input\n            id=\"description\"\n            type=\"text\"\n            onChange={(event) => {\n              this.addValueToState(event.target.value, event.target.id);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"imgUrl\"\n          className={imgUrl ? 'error error_imgUrl' : ''}\n        >\n          imgUrl\n          <input\n            id=\"imgUrl\"\n            type=\"text\"\n            onChange={(event) => {\n              this.addValueToState(event.target.value, event.target.id);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"imdbId\"\n          className={imdbId ? 'error error_imdbId' : ''}\n        >\n          ImdbId\n          <input\n            id=\"imdbId\"\n            type=\"text\"\n            onChange={(event) => {\n              this.addValueToState(event.target.value, event.target.id);\n            }}\n          />\n        </label>\n        <button\n          onClick={() => {\n            this.validation(this.state.movie);\n          }}\n          type=\"button\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMove={(newMovie: Movie) => {\n              this.addMovie(newMovie);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}